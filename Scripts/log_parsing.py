# -*- coding: utf-8 -*-
"""Log Parsing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rginrGpPCkSZfK7NuyPLdMxkn_L915Ct
"""

#importing the regular expression library

import re

#Parsing through the first log file using re.search()

with open("/content/log1.txt","r") as f:
  log_file = f.readlines()

  for line in log_file:
    if re.search(r"ERROR", line):
      print(line.strip())
  else:
    print("No errors found")

#I've tried grouping the message categories by adding them to lists

info = []
warning = []


# the re.compile() stores a 'colection' of words and saves them. Since I'm grouping into two categories, I've saved them into info_pat(tern) and warning_pat
info_pat = re.compile(r"info", re.IGNORECASE)
warning_pat = re.compile(r"WARNING",re.IGNORECASE)

#looping through the log file to search for the patterns in stored in re.compile()
for line in log_file:
  if info_pat.search(line):
    info.append(line.strip())
  elif warning_pat.search(line):
    warning.append(line.strip())

'''print("\n Info Logs ")
for line in info:
  print(line)'''
print("\n Warning Logs ")
for line in warning:
  print(line)

with open ("/content/log2.txt", "r") as f:
  log2 = f.readlines()

errors = []

for line in log2:
  if re.compile(r"Error", re.IGNORECASE):
    errors.append(line)
print("\n Error Logs...")
for line in errors:
  print(errors)

from ctypes import addressof
#Parsing Server Logs
import re
server_log = open("/content/serverlogs.log")

pattern = r"((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"

#extract ip addresses
address_list = []
failed_list = []
success_list = []
for log in server_log:
  ip_add = re.search(pattern,log)
  address_list.append(ip_add.group())
  lst = log.split(" ")
  fail = int(lst[-1])
  success = int(lst[-4])

  print(f"success: {success}, failed: {fail} ")

  failed_list.append(fail)
  success_list.append(success)

import pandas as pd

df = pd.DataFrame(columns=['IP_Address', 'Success', 'Failed'])
df['IP_Address'] = address_list
df['Success'] = success_list
df['Failed'] = failed_list

df.head()

df.to_csv("server_detail", index=False)